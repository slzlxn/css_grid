@charset "UTF-8";

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* grid는 flex보다 나중에 나왔음
flex는 항방향 배치를 구현하는것
grid는 두방향 배치 구현
두개를 다 안다면 알맞은 곳에 사용할 수 있다
전체구성은 grid로 하고 부분구성은 flex로 하는 경우가 많다 */


.container {
    border: 2px solid #000;
    background-color: rosybrown;
    padding: 10px;
}

.item {
    border: 2px solid #000;
    background-color: darkkhaki;
    padding: 10px;
}

/* grid-columes , grid-row
grid에는 라인이 있는데 그 라인에는 번호가 있음 각 셀별로 영역을 지정할 수 있음. item(자식)에 지정해야함*/

body{
    font-size: 20px;
}
.container {
    font-size: 12px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(100px, auto);
    gap: 1rem;
    /* (r은 root) 제일 힘이 셈*/

}

.item {
    font-size: 1em; /* 물려받는거 */
}

.item:nth-child(1){
    grid-column-start: 1;
    grid-column-end: 3;
    grid-column: 1/3;/* 1번부터 3번까지 */
    grid-row-start: 1;
    grid-row-end: 4;
    grid-row: 1/4;
}
.item:nth-child(3){
    grid-row: 2;
    grid-column: 3;
    z-index: 10;
    /* grid에서는 position없이 z-index가능 */
}
.item:nth-child(4){
    grid-row: 3/4;
    /* 기본이 한칸이므로 end는 생략할 수 있다 */
    grid-row:3/5;
    grid-row:3/span 2; 
    /* 3번부터 2칸을 차지해라 */
    grid-row:2/span 2; 
    grid-column:3;
}